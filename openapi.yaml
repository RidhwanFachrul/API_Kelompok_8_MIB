openapi: '3.0.2'
info:
  title: OpenAPI KELOMPOK 8
  description: Tugas membuat open API.
  termsOfService: https://example.com/terms/
  contact:
    name: API Support
    url: https://github.com/vinsmith-MIB
    email: kevincahyo.22051@mhs.unesa.ac.id
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.1

servers:
- url: https://z4zc757j-{port}.asse.devtunnels.ms/{envoirment}
  description: API server
  variables:
    envoirment:
      description: 'gdfadfa'
      enum:
        - 'API_KELOMPOK_8_MIB'
        - 'staging'
        - 'production'
      default: 'API_KELOMPOK_8_MIB'
    port:
      enum:
        - '80'
        - '3000'
        - '8012'
      default: '8012'

paths:
  
  /notes:
    get:
      tags:
        - catatan
      summary: 'lihat catatanmu'
      description: Dapatkan semua catatan yang dapat diakses user
      responses:
        '200':
          description: list Catatan
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                      description: ID dari catatan
                    catatan:
                      type: string
                      description: Isi dari catatan
              example:
                - id: 1
                  catatan: "Membeli bahan makanan untuk masak malam ini"
                - id: 2
                  catatan: "Meeting dengan tim pengembangan pukul 10 pagi"
                - id: 3
                  catatan: "Menyelesaikan laporan keuangan bulan ini"

        '400': 
          description: id tidak valid
        '401':
          description: catatan tidak ditemukan
        '402':
          description: catatan tidak dapat diakses  
    post:
      tags:
        - catatan
      summary: tambahkan catatan
      description: tambahkan catatan yang dapat user akses
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              type: object
              properties:
                catatan:
                  description: Create new note
                  type: string
              required:
                - catatan
      responses:
        '200':
          description: Catatan telah diperbarui
          content:
            application/json:
              example:
                id: 1
                catatan: Catatan baru telah dibuat
            application/xml: {}
        '400': 
          description: id tidak valid
        '401':
          description: catatan tidak ditemukan
        '402':
          description: catatan tidak dapat diakses

    put:
      tags:
        - catatan
      summary: Mengedit catatan
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              type: object
              properties:
                id:
                  type: integer
                catatan:
                  type: string
              required:
                - id
                - catatan

      responses:
        '200':
          description: Catatan berhasil diupdate
          content:
            application/json:
              example:
                message: Catatan berhasil diupdate
        '400':
          description: Permintaan tidak valid
          content:
            application/json:
              example:
                message: Gagal mengedit catatan, permintaan tidak valid
        '404':
          description: Catatan tidak ditemukan
          content:
            application/json:
              example:
                message: Gagal mengedit catatan, catatan tidak ditemukan
          
    delete:
      tags:
        - catatan
      summary: hapus catatan
      description: hapus catatan melalui id
      parameters:
      - name: hapus
        in: query
        schema:
          type: boolean
      - name: id_awal
        in: query
        description: id_awal
        required: false
        schema:
          type: integer
      - name: id_akhir
        in: query
        required: false
        schema:
          type: integer
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema: 
              type: object
              properties:
                id:
                  type: integer
            encoding:
              historyMetadata:
                contentType: application/xml; charset=utf-8
      responses:
        '200':
          description: catatan berhasil dihapus
          content:
            application/json:
              examples:
                success:
                  value:
                    message: Catatan berhasil dihapus
                    deleted_note:
                      id: 1
                      catatan: "Contoh catatan yang telah dihapus"
        '400': 
          description: id tidak valid
          content:
            application/json:
              examples:
                invalid_id:
                  value:
                    message: ID tidak valid
        '401':
          description: catatan tidak ditemukan
          content:
            application/json:
              examples:
                not_found:
                  value:
                    message: Catatan tidak ditemukan
        '402':
          description: catatan tidak dapat diakses
          content:
            application/json:
              examples:
                access_denied:
                  value:
                    message: Catatan tidak dapat diakses


components:
  schemas:
    GeneralError:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    catatan:
      type: object
      properties:
        id:
          type: integer
          format: int64
        catatan:
          type: string
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string

  parameters:
    skipParam:
      name: skip
      in: query
      description: number of items to skip
      required: true
      schema:
        type: integer
        format: int32
    limitParam:
      name: limit
      in: query
      description: max records to return
      required: true
      schema:
        type: integer
        format: int32
  responses:
    NotFound:
      description: Entity not found.
    IllegalInput:
      description: Illegal input for operation.
    GeneralError:
      description: General Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GeneralError'




  
